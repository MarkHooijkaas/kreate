#!/bin/bash

#####################################################################
# helper functions

function info()  { ${INFO-true} && echo $*; }
function verbose() { ${VERBOSE-false} && echo $*; }
export -f info
export -f verbose

#####################################################################
# commands

export KREATE_COMMIT_MESSAGE="files created/updated by kreate scripts"
kreate_help_command() {
    cat << EOF
Usage: ${0##*/} [options] <command> <dir>...

The purpose of kreate is calling kreate.sh to create files
and then optionally execute a command like git or kustomize
Options can be:
    -h|--help      display this help and exit
    -v|--verbose   verbose mode.
    -s|--silent    silent mode.
    -i|--init-file use another init file
    -m|--message   optional commit message for commit command
Command can be:
    help     display this help text and exit
    files    only kreate files, no further action
    status   kreate temporary files, do diff -q per file
    diff     kreate temporary files, do diff per file
    commit   kreate files, do git commit with commit message
             $KREATE_COMMIT_MESSAGE
    build    kreate files, do kustomize build
    apply    kreate files, do kustomize build | kubectl apply -f -
$KREATE_EXTRA_HELP_TEXT
Note: It is possible to only use the first letter(s) of a command,
as they are all unique.
EOF
}

kreate_files_command() { ${VERBOSE-false} && echo created files, no more actions; }
kreate_status_command() { git status $1; }
kreate_diff_command() { git diff $1; }
kreate_commit_command() { git commit $1 -m "$KREATE_COMMIT_MESSAGE"; }
kreate_build_command() {
    ${INFO-true} && echo kustomize build $1
    kustomize build $1
}
kreate_apply_command() {
    ${INFO-true} && echo kustomize build $1 \| kubectl apply -f -
    kustomize build $1 | kubectl apply -f -
}

declare -A commands=()
commands[help]=kreate_help_command
commands[files]=kreate_files_command
commands[diff]=kreate_diff_command
commands[status]=kreate_status_command
commands[commit]=kreate_commit_command
commands[apply]=kreate_apply_command
commands[build]=kreate_build_command

#####################################################################
# functions to be used in kreate.sh scripts

kreate_file() {
    info kreating $(pwd)/$FILE
    #echo $(pwd)/$FILE >>$KREATED_FILES
 }
kreate_tmp_file() {
    ORIG_FILE=$FILE
    FILE=tmp.kreated.$FILE
    verbose kreating tmp file $FILE
}
kreate_diff() {
    if [[ -f $ORIG_FILE ]]; then
        info diff $ORIG_FILE
        diff $ORIG_FILE $FILE
    else
        info no original file $ORIG_FILE
    fi
    rm $FILE
    FILE=$ORIG_FILE
}
kreate_status() {
    if [[ -f $ORIG_FILE ]]; then
        info diff -q $ORIG_FILE
        diff -q $ORIG_FILE $FILE
    else
        info no original file $ORIG_FILE
    fi
    rm $FILE
    FILE=$ORIG_FILE
}
export -f kreate_file
export -f kreate_tmp_file
export -f kreate_diff
export -f kreate_status

export KREATE_FILE="kreate_file"
#export KREATE_TMP_DIR=`mktemp -d --tmpdir tmp.kreate.XXXXXX`
#export KREATED_FILES=$KREATE_TMP_DIR/kreated.files

#####################################################################
# initialisation
kreate_init() {
    if [[ -f  $1 ]] ;then
        info loading init file $1
        source $1
    else
        verbose skipping init file $1
    fi
}

command=files
while [ ! $# -eq 0 ]; do
    case $1 in
        -h|help|--help)
            command=help
            break
            ;;
        -v|--verbose)
            export VERBOSE=true
            export INFO=true
            ;;
        -q|--quiet)
            export VERBOSE=false
            export INFO=false
            ;;
        -s|--status)
            export KREATE_FILE=kreate_tmp_file
            export KREATE_DONE=kreate_status
            ;;
        -d|--diff|--dry-run)
            export KREATE_FILE=kreate_tmp_file
            export KREATE_DONE=kreate_diff
            ;;
        -i|--init)
            init_files+=("$2")
            shift
            ;;
        -m|--message)
            KREATE_COMMIT_MESSAGE="$2"
            shift
            ;;
        -?*)
            actions+=("$1")
            ;;
        */*)  # file or directory name with a period /
            command=files
            break
            ;;
        *.*)  # file or directory name with a period .
            command=files
            break
            ;;
        *)  # Default case: No more options, so break out of the loop.
            command=$1
            shift
            break
    esac
    shift
done

kreate_init $KREATE_INIT_FILE
kreate_init ./.kreate_profile
kreate_init ~/.kreate_profile
kreate_init /etc/kreate_profile


EXTRA_FILES=""
if [ $# -eq 0 ]; then EXTRA_FILES="."; fi

for f in "${!commands[@]}"; do
    if [[ "$f" == "$command"* ]]; then
        command=$f
        KREATE_COMMAND=${commands[$command]}
        ${INFO-true} && echo kreate $command "$@" $EXTRA_FILES
    fi
done
if [[ "$command" == "help" ]]; then
    show_help
    exit 0
fi


for f in "$@" $EXTRA_FILES
do
    if [[ -x $f/kreate.sh ]]; then
        ${INFO-true} && echo Starting $f/kreate.sh
        $f/kreate.sh
        $KREATE_COMMAND $f
    else
        ${INFO-true} && echo Not available $f/kreate.sh
    fi
done
#for f in `cat $KREATED_FILES`; do echo $f; done
#if [[ "$KREATE_TMP_DIR" == "/tmp/"* ]]; then
#    rm $KREATE_TMP_DIR
#fi
